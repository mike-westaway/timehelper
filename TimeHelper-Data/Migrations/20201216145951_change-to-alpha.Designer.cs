// <auto-generated />
using TimeHelper.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GSK_TimeAssistant_Data.Migrations
{
    [DbContext(typeof(TimeHelperDataContext))]
    [Migration("20201216145951_change-to-alpha")]
    partial class changetoalpha
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("TimeHelper.Data.Models.Association", b =>
                {
                    b.Property<int>("AssociationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssociationId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Association");

                    b.HasData(
                        new
                        {
                            AssociationId = -1,
                            Criteria = "alpha",
                            ProjectId = -1,
                            Type = 0,
                            UserId = "nick@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -2,
                            Criteria = "alpha",
                            ProjectId = -1,
                            Type = 1,
                            UserId = "nick@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -3,
                            Criteria = "beta",
                            ProjectId = -2,
                            Type = 0,
                            UserId = "keith2@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -4,
                            Criteria = "beta",
                            ProjectId = -2,
                            Type = 1,
                            UserId = "keith2@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -5,
                            Criteria = "beta",
                            ProjectId = -2,
                            Type = 0,
                            UserId = "nick@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -6,
                            Criteria = "beta",
                            ProjectId = -2,
                            Type = 1,
                            UserId = "nick@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -7,
                            Criteria = "gamma",
                            ProjectId = -3,
                            Type = 0,
                            UserId = "keith2@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -8,
                            Criteria = "gamma",
                            ProjectId = -3,
                            Type = 1,
                            UserId = "keith2@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -9,
                            Criteria = "gamma",
                            ProjectId = -3,
                            Type = 0,
                            UserId = "nick@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -10,
                            Criteria = "gamma",
                            ProjectId = -3,
                            Type = 1,
                            UserId = "nick@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -11,
                            Criteria = "delta",
                            ProjectId = -4,
                            Type = 0,
                            UserId = "keith2@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -12,
                            Criteria = "delta",
                            ProjectId = -4,
                            Type = 1,
                            UserId = "keith2@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -13,
                            Criteria = "delta",
                            ProjectId = -4,
                            Type = 0,
                            UserId = "nick@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -14,
                            Criteria = "delta",
                            ProjectId = -4,
                            Type = 1,
                            UserId = "nick@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -15,
                            Criteria = "epsilon",
                            ProjectId = -5,
                            Type = 0,
                            UserId = "keith2@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -16,
                            Criteria = "epsilon",
                            ProjectId = -5,
                            Type = 1,
                            UserId = "keith2@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -17,
                            Criteria = "epsilon",
                            ProjectId = -5,
                            Type = 0,
                            UserId = "nick@nikkh.net"
                        },
                        new
                        {
                            AssociationId = -18,
                            Criteria = "epsilon",
                            ProjectId = -5,
                            Type = 1,
                            UserId = "nick@nikkh.net"
                        });
                });

            modelBuilder.Entity("TimeHelper.Data.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Project");

                    b.HasData(
                        new
                        {
                            ProjectId = -1,
                            Description = "Project Alpha",
                            Name = "Alpha"
                        },
                        new
                        {
                            ProjectId = -2,
                            Description = "Project Beta",
                            Name = "Beta"
                        },
                        new
                        {
                            ProjectId = -3,
                            Description = "Project Gamma",
                            Name = "Gamma"
                        },
                        new
                        {
                            ProjectId = -4,
                            Description = "Project Delta",
                            Name = "Delta"
                        },
                        new
                        {
                            ProjectId = -5,
                            Description = "Project Epsilon",
                            Name = "Epsilon"
                        });
                });

            modelBuilder.Entity("TimeHelper.Data.Models.Association", b =>
                {
                    b.HasOne("TimeHelper.Data.Models.Project", "Project")
                        .WithMany("Associations")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TimeHelper.Data.Models.Project", b =>
                {
                    b.Navigation("Associations");
                });
#pragma warning restore 612, 618
        }
    }
}
